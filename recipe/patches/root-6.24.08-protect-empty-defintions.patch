From 87a2b14a3827485b0bf63f5c5cf3333d9e3db5cd Mon Sep 17 00:00:00 2001
From: Jonas Rembser <jonas.rembser@cern.ch>
Date: Tue, 21 Sep 2021 15:15:17 +0200
Subject: [PATCH] [cmake] Protect against empty `COMPILE_DEFINITIONS` in
 rootcint command

In the `rootcint` command defined in `RootMacros.cmake`, the
`COMPILE_DEFINITIONS` from the target are forwarded as compiler flags.

The `COMPILE_DEFINITIONS` are stored in the `module_defs` variable with
a generator expression:

```
set(module_defs $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>)
```

Then, the definitions are added to the rootcint command with this
expression:

```
"$<$<BOOL:${module_defs}>:-D$<JOIN:${module_defs},;-D>>"
```

This code was almost copied exactly from the CMake documentation
example:

https://cmake.org/cmake/help/latest/manual/cmake-generator-expressions.7.html

In particular, the `BOOL` check makes sure that the if the target
property is empty, we will not get a bare `-D` with nothing after it,
corrupting the rootcint command.

However, there is no protextion against the case where the
`COMPILE_DEFINITIONS` target property is not empty, but its elements are
empty strings! This happened to me in my recent build.

Instead of trying to figure out where the empty strings are added to the
`COMPILE_DEFINITIONS`, it is better to also protect against empty target
property elements in the CMake generator expressions, which is
implemented in this commit.
---
 cmake/modules/RootMacros.cmake | 5 ++++-
 1 file changed, 4 insertions(+), 1 deletion(-)

diff --git a/cmake/modules/RootMacros.cmake b/cmake/modules/RootMacros.cmake
index 6e28c5e2c9..a803ae779c 100644
--- a/cmake/modules/RootMacros.cmake
+++ b/cmake/modules/RootMacros.cmake
@@ -614,7 +614,10 @@ function(ROOT_GENERATE_DICTIONARY dictionary)
       else()
         set(module_incs $<TARGET_PROPERTY:${ARG_MODULE},INCLUDE_DIRECTORIES>)
       endif()
-      set(module_defs $<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>)
+      # The COMPILE_DEFINITIONS list might contain empty elements. These are
+      # removed with the FILTER generator expression, excluding elements that
+      # match the ^$ regexp (only matches empty strings).
+      set(module_defs "$<FILTER:$<TARGET_PROPERTY:${ARG_MODULE},COMPILE_DEFINITIONS>,EXCLUDE,^$>")
     endif()
   endif()
 
-- 
2.37.0 (Apple Git-136)

