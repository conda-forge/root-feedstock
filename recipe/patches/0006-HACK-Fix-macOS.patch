From 8530cd0d9b26d022fa9e54b6238334f2b3440220 Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Wed, 12 Mar 2025 09:27:23 +0100
Subject: [PATCH 6/8] HACK: Fix macOS

---
 cmake/modules/SearchInstalledSoftware.cmake     | 4 ++--
 graf2d/asimage/src/libAfterImage/configure.in   | 5 +----
 interpreter/cling/lib/Interpreter/CIFactory.cpp | 7 -------
 3 files changed, 3 insertions(+), 13 deletions(-)

diff --git a/cmake/modules/SearchInstalledSoftware.cmake b/cmake/modules/SearchInstalledSoftware.cmake
index 567809db59..15b3b68129 100644
--- a/cmake/modules/SearchInstalledSoftware.cmake
+++ b/cmake/modules/SearchInstalledSoftware.cmake
@@ -99,7 +99,7 @@ endif()
 if(cocoa)
   if(APPLE)
     set(x11 OFF CACHE BOOL "Disabled because cocoa requested (${x11_description})" FORCE)
-    set(builtin_freetype ON CACHE BOOL "Enabled because needed for Cocoa graphics (${builtin_freetype_description})" FORCE)
+    set(builtin_freetype OFF CACHE BOOL "Enabled because needed for Cocoa graphics (${builtin_freetype_description})" FORCE)
   else()
     message(STATUS "Cocoa option can only be enabled on MacOSX platform")
     set(cocoa OFF CACHE BOOL "Disabled because only available on MacOSX (${cocoa_description})" FORCE)
@@ -176,7 +176,7 @@ if(NOT builtin_freetype)
       set(FREETYPE_INCLUDE_DIR ${FREETYPE_INCLUDE_DIR_freetype2})
     else()
       message(STATUS "FreeType not found. Switching on builtin_freetype option")
-      set(builtin_freetype ON CACHE BOOL "Enabled because FreeType not found (${builtin_freetype_description})" FORCE)
+      set(builtin_freetype OFF CACHE BOOL "Enabled because FreeType not found (${builtin_freetype_description})" FORCE)
     endif()
   endif()
 endif()
diff --git a/graf2d/asimage/src/libAfterImage/configure.in b/graf2d/asimage/src/libAfterImage/configure.in
index 1cbf9a521d..db4c7b3523 100644
--- a/graf2d/asimage/src/libAfterImage/configure.in
+++ b/graf2d/asimage/src/libAfterImage/configure.in
@@ -618,10 +618,7 @@ else
 	                   	[have_ttf=yes],AC_MSG_RESULT(no))
 	  	fi;
 	  elif test "x$have_freetype_freetype" = "xyes" ; then
-		AC_TRY_RUN([#include <ft2build.h> 
-			    #include <freetype/freetype.h>
-                            int main(){FT_Face f; return 0;}],
-	                [have_ttf=yes],AC_MSG_RESULT(no))
+		have_ttf=yes
 	  elif test "x$have_freetype" = "xyes" ; then
 		AC_TRY_RUN([#include <ft2build.h>
 			#include <freetype.h>
diff --git a/interpreter/cling/lib/Interpreter/CIFactory.cpp b/interpreter/cling/lib/Interpreter/CIFactory.cpp
index 385c036825..983e1e792f 100644
--- a/interpreter/cling/lib/Interpreter/CIFactory.cpp
+++ b/interpreter/cling/lib/Interpreter/CIFactory.cpp
@@ -693,17 +693,10 @@ namespace {
                             /*AllowModulemapOverride=*/ false);
 #elif __APPLE__
     if (Triple.isMacOSX()) {
-      if (CI.getTarget().getSDKVersion() < VersionTuple(14, 4)) {
-        maybeAppendOverlayEntry(stdIncLoc.str(), "std_darwin.MacOSX14.2.sdk.modulemap",
-                                clingIncLoc.str().str(), MOverlay,
-                                /*RegisterModuleMap=*/ true,
-                                /*AllowModulemapOverride=*/ false);
-      } else {
         maybeAppendOverlayEntry(stdIncLoc.str(), "std_darwin.modulemap",
                                 clingIncLoc.str().str(), MOverlay,
                                 /*RegisterModuleMap=*/ true,
                                 /*AllowModulemapOverride=*/ false);
-      }
     }
 #else
     maybeAppendOverlayEntry(cIncLoc.str(), "libc.modulemap",
-- 
2.45.0

