From c3acb775ae6ad5e4be68f35c560ea1e8dad80752 Mon Sep 17 00:00:00 2001
From: Chris Burr <christopher.burr@cern.ch>
Date: Thu, 23 Jan 2025 16:03:46 +0100
Subject: [PATCH] HACK2: Support overriding triplet used by cling

---
 interpreter/cling/lib/Interpreter/CIFactory.cpp | 16 ++++++++++++----
 1 file changed, 12 insertions(+), 4 deletions(-)

diff --git a/interpreter/cling/lib/Interpreter/CIFactory.cpp b/interpreter/cling/lib/Interpreter/CIFactory.cpp
index 385c036825..e3f7052d9a 100644
--- a/interpreter/cling/lib/Interpreter/CIFactory.cpp
+++ b/interpreter/cling/lib/Interpreter/CIFactory.cpp
@@ -50,6 +50,7 @@
 #include "llvm/Target/TargetOptions.h"
 #include "llvm/TargetParser/Host.h"
 
+#include <iostream>
 #include <cstdio>
 #include <cstdlib>
 #include <ctime>
@@ -1270,9 +1271,8 @@ namespace {
     bool profilingEnabled =
         cling::utils::ConvertEnvValueToBool(std::getenv("CLING_PROFILE"));
 
-#if __APPLE__ && __arm64__
-    argvCompile.push_back("--target=arm64-apple-darwin20.3.0");
-#endif
+    argvCompile.push_back("--target=TODO_OVERRIDE_TARGET");
+
 #if __aarch64__
     // Disable outline-atomics on AArch64; the routines __aarch64_* are defined
     // in the static library libgcc.a and not necessarily included in libCling
@@ -1422,10 +1422,18 @@ namespace {
       return nullptr;
     }
 
-    llvm::Triple TheTriple(llvm::sys::getProcessTriple());
+    std::cout << "llvm::sys::getProcessTriple(): " << llvm::sys::getProcessTriple() << std::endl;
+    llvm::Triple TheTriple("TODO_OVERRIDE_TARGET");
     clang::driver::Driver Drvr(argv[0], TheTriple.getTriple(), *Diags);
     //Drvr.setWarnMissingInput(false);
     Drvr.setCheckInputsExist(false); // think foo.C(12)
+    if (COpts.Verbose) {
+      cling::log() << "Compiler command line: ";
+      for (const auto& arg : argvCompile) {
+        cling::log() << arg << " ";
+      }
+      cling::log() << "\n";
+    }
     llvm::ArrayRef<const char*>RF(&(argvCompile[0]), argvCompile.size());
     std::unique_ptr<clang::driver::Compilation>
       Compilation(Drvr.BuildCompilation(RF));
-- 
2.45.0

